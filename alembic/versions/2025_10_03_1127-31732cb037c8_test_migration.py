"""test migration

Revision ID: 31732cb037c8
Revises: 
Create Date: 2025-10-03 11:27:22.233864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '31732cb037c8'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=20), nullable=False, comment='用户登录名，唯一'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='用户邮箱地址，唯一'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='加密后的密码'),
    sa.Column('first_name', sa.String(length=50), nullable=False, comment='用户名字'),
    sa.Column('last_name', sa.String(length=50), nullable=False, comment='用户姓氏'),
    sa.Column('phone', sa.String(length=15), nullable=True, comment='用户手机号码'),
    sa.Column('avatar', sa.String(length=255), nullable=True, comment='用户头像文件路径'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='用户状态：pending, active, inactive, suspended'),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True, comment='邮箱验证时间'),
    sa.Column('last_login_at', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('login_count', sa.Integer(), nullable=False, comment='用户登录次数'),
    sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='是否为超级用户'),
    sa.Column('permissions', sa.JSON(), nullable=True, comment='用户权限列表，JSON格式'),
    sa.Column('profile_data', sa.JSON(), nullable=True, comment='用户档案信息，JSON格式'),
    sa.Column('remember_token', sa.String(length=100), nullable=True, comment='记住我令牌'),
    sa.Column('password_reset_token', sa.String(length=100), nullable=True, comment='密码重置令牌'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_status', 'users', ['status'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.drop_table('migrations')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('migrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('version', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='migrations_pkey'),
    sa.UniqueConstraint('version', name='migrations_version_key')
    )
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_status', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
