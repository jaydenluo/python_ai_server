"""Reorganize models structure

Revision ID: bd33a302e27d
Revises: 3fcb3159212b
Create Date: 2025-10-03 15:24:39.283638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bd33a302e27d'
down_revision: Union[str, Sequence[str], None] = '3fcb3159212b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_white_lists',
    sa.Column('url', sa.String(length=200), nullable=False, comment='URL'),
    sa.Column('method', sa.Integer(), nullable=True, comment='请求方法: 0-GET 1-POST 2-PUT 3-DELETE'),
    sa.Column('enable_datasource', sa.Boolean(), nullable=True, comment='是否启用数据源'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('areas',
    sa.Column('name', sa.String(length=100), nullable=False, comment='地区名称'),
    sa.Column('code', sa.String(length=20), nullable=False, comment='地区编码'),
    sa.Column('level', sa.BigInteger(), nullable=False, comment='地区级别: 1-省份 2-城市 3-区县 4-乡级'),
    sa.Column('pinyin', sa.String(length=255), nullable=False, comment='拼音'),
    sa.Column('initials', sa.String(length=20), nullable=False, comment='首字母'),
    sa.Column('enable', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('pcode', sa.String(length=20), nullable=True, comment='父地区编码'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['pcode'], ['areas.code'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('idx_area_code', 'areas', ['code'], unique=False)
    op.create_table('configs',
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='父配置ID'),
    sa.Column('title', sa.String(length=50), nullable=False, comment='配置标题'),
    sa.Column('key', sa.String(length=100), nullable=False, comment='配置键'),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='配置值'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('data_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='数据选项'),
    sa.Column('form_item_type', sa.Integer(), nullable=True, comment='表单项类型: 0-输入框 1-数字输入框 2-文本域 3-选择器 4-多选框 5-单选框 6-开关 7-日期选择器 8-时间选择器 9-日期时间选择器 10-文件上传 11-图片上传 12-富文本编辑器 13-代码编辑器 14-颜色选择器 15-滑块'),
    sa.Column('rule', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='验证规则'),
    sa.Column('placeholder', sa.String(length=50), nullable=True, comment='占位符'),
    sa.Column('setting', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='设置'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['configs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_config_key', 'configs', ['key'], unique=False)
    op.create_table('depts',
    sa.Column('name', sa.String(length=64), nullable=False, comment='部门名称'),
    sa.Column('key', sa.String(length=64), nullable=True, comment='部门编码'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('owner', sa.String(length=32), nullable=True, comment='负责人'),
    sa.Column('phone', sa.String(length=32), nullable=True, comment='联系电话'),
    sa.Column('email', sa.String(length=32), nullable=True, comment='邮箱'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='父部门ID'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['depts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('dictionaries',
    sa.Column('label', sa.String(length=100), nullable=True, comment='字典标签'),
    sa.Column('value', sa.String(length=200), nullable=True, comment='字典值'),
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='父字典ID'),
    sa.Column('type', sa.Integer(), nullable=True, comment='数据值类型: 0-字符串 1-数字 2-布尔 3-日期 4-时间 5-日期时间 6-JSON 7-数组'),
    sa.Column('color', sa.String(length=20), nullable=True, comment='颜色'),
    sa.Column('is_value', sa.Boolean(), nullable=True, comment='是否为值'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('remark', sa.String(length=2000), nullable=True, comment='备注'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['dictionaries.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('download_centers',
    sa.Column('task_name', sa.String(length=255), nullable=False, comment='任务名称'),
    sa.Column('task_status', sa.Integer(), nullable=True, comment='任务状态: 0-已创建 1-进行中 2-完成 3-失败'),
    sa.Column('file_name', sa.String(length=255), nullable=True, comment='文件名'),
    sa.Column('url', sa.String(length=100), nullable=True, comment='文件路径'),
    sa.Column('size', sa.BigInteger(), nullable=True, comment='文件大小'),
    sa.Column('md5sum', sa.String(length=36), nullable=True, comment='MD5校验值'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_lists',
    sa.Column('name', sa.String(length=200), nullable=True, comment='文件名'),
    sa.Column('url', sa.String(length=100), nullable=True, comment='文件路径'),
    sa.Column('file_url', sa.String(length=255), nullable=True, comment='文件地址'),
    sa.Column('engine', sa.String(length=100), nullable=True, comment='存储引擎'),
    sa.Column('mime_type', sa.String(length=100), nullable=True, comment='MIME类型'),
    sa.Column('size', sa.String(length=36), nullable=True, comment='文件大小'),
    sa.Column('md5sum', sa.String(length=36), nullable=True, comment='MD5校验值'),
    sa.Column('upload_method', sa.SmallInteger(), nullable=True, comment='上传方式: 0-默认上传 1-文件选择器上传'),
    sa.Column('file_type', sa.SmallInteger(), nullable=True, comment='文件类型: 0-图片 1-视频 2-音频 3-其他'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_logs',
    sa.Column('username', sa.String(length=32), nullable=True, comment='用户名'),
    sa.Column('ip', sa.String(length=32), nullable=True, comment='IP地址'),
    sa.Column('agent', sa.Text(), nullable=True, comment='用户代理'),
    sa.Column('browser', sa.String(length=200), nullable=True, comment='浏览器'),
    sa.Column('os', sa.String(length=200), nullable=True, comment='操作系统'),
    sa.Column('continent', sa.String(length=50), nullable=True, comment='洲'),
    sa.Column('country', sa.String(length=50), nullable=True, comment='国家'),
    sa.Column('province', sa.String(length=50), nullable=True, comment='省份'),
    sa.Column('city', sa.String(length=50), nullable=True, comment='城市'),
    sa.Column('district', sa.String(length=50), nullable=True, comment='区县'),
    sa.Column('isp', sa.String(length=50), nullable=True, comment='ISP'),
    sa.Column('area_code', sa.String(length=50), nullable=True, comment='地区编码'),
    sa.Column('country_english', sa.String(length=50), nullable=True, comment='国家英文名'),
    sa.Column('country_code', sa.String(length=50), nullable=True, comment='国家编码'),
    sa.Column('longitude', sa.String(length=50), nullable=True, comment='经度'),
    sa.Column('latitude', sa.String(length=50), nullable=True, comment='纬度'),
    sa.Column('login_type', sa.Integer(), nullable=True, comment='登录类型: 1-普通登录 2-微信扫码登录'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menus',
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='父菜单ID'),
    sa.Column('icon', sa.String(length=64), nullable=True, comment='图标'),
    sa.Column('name', sa.String(length=64), nullable=False, comment='菜单名称'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('is_link', sa.Boolean(), nullable=True, comment='是否外链'),
    sa.Column('link_url', sa.String(length=255), nullable=True, comment='外链地址'),
    sa.Column('is_catalog', sa.Boolean(), nullable=True, comment='是否目录'),
    sa.Column('web_path', sa.String(length=128), nullable=True, comment='前端路径'),
    sa.Column('component', sa.String(length=128), nullable=True, comment='组件路径'),
    sa.Column('component_name', sa.String(length=50), nullable=True, comment='组件名称'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('cache', sa.Boolean(), nullable=True, comment='是否缓存'),
    sa.Column('visible', sa.Boolean(), nullable=True, comment='是否显示'),
    sa.Column('is_iframe', sa.Boolean(), nullable=True, comment='是否内嵌'),
    sa.Column('is_affix', sa.Boolean(), nullable=True, comment='是否固定'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['menus.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_centers',
    sa.Column('title', sa.String(length=100), nullable=False, comment='消息标题'),
    sa.Column('content', sa.Text(), nullable=False, comment='消息内容'),
    sa.Column('target_type', sa.Integer(), nullable=True, comment='目标类型'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operation_logs',
    sa.Column('request_modular', sa.String(length=64), nullable=True, comment='请求模块'),
    sa.Column('request_path', sa.String(length=400), nullable=True, comment='请求路径'),
    sa.Column('request_body', sa.Text(), nullable=True, comment='请求体'),
    sa.Column('request_method', sa.String(length=8), nullable=True, comment='请求方法'),
    sa.Column('request_msg', sa.Text(), nullable=True, comment='请求消息'),
    sa.Column('request_ip', sa.String(length=32), nullable=True, comment='请求IP'),
    sa.Column('request_browser', sa.String(length=64), nullable=True, comment='请求浏览器'),
    sa.Column('response_code', sa.String(length=32), nullable=True, comment='响应码'),
    sa.Column('request_os', sa.String(length=64), nullable=True, comment='请求操作系统'),
    sa.Column('json_result', sa.Text(), nullable=True, comment='JSON结果'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('name', sa.String(length=64), nullable=False, comment='角色名称'),
    sa.Column('key', sa.String(length=64), nullable=False, comment='权限字符'),
    sa.Column('sort', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='状态'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('menu_buttons',
    sa.Column('menu_id', sa.BigInteger(), nullable=False, comment='菜单ID'),
    sa.Column('name', sa.String(length=64), nullable=False, comment='按钮名称'),
    sa.Column('value', sa.String(length=64), nullable=False, comment='权限值'),
    sa.Column('api', sa.String(length=200), nullable=False, comment='API地址'),
    sa.Column('method', sa.Integer(), nullable=True, comment='请求方法: 0-GET 1-POST 2-PUT 3-DELETE'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('menu_fields',
    sa.Column('model', sa.String(length=64), nullable=False, comment='模型名称'),
    sa.Column('menu_id', sa.BigInteger(), nullable=False, comment='菜单ID'),
    sa.Column('field_name', sa.String(length=64), nullable=False, comment='字段名'),
    sa.Column('title', sa.String(length=64), nullable=False, comment='字段标题'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_center_target_depts',
    sa.Column('messagecenter_id', sa.BigInteger(), nullable=False, comment='消息中心ID'),
    sa.Column('dept_id', sa.BigInteger(), nullable=False, comment='部门ID'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['dept_id'], ['depts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['messagecenter_id'], ['message_centers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_center_target_roles',
    sa.Column('messagecenter_id', sa.BigInteger(), nullable=False, comment='消息中心ID'),
    sa.Column('role_id', sa.BigInteger(), nullable=False, comment='角色ID'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['messagecenter_id'], ['message_centers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_menu_permission',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=False),
    sa.Column('menu_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('field_permissions',
    sa.Column('role_id', sa.BigInteger(), nullable=False, comment='角色ID'),
    sa.Column('field_id', sa.BigInteger(), nullable=False, comment='字段ID'),
    sa.Column('is_query', sa.Boolean(), nullable=True, comment='是否可查询'),
    sa.Column('is_create', sa.Boolean(), nullable=True, comment='是否可创建'),
    sa.Column('is_update', sa.Boolean(), nullable=True, comment='是否可更新'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['field_id'], ['menu_fields.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_center_target_users',
    sa.Column('users_id', sa.BigInteger(), nullable=False, comment='用户ID'),
    sa.Column('messagecenter_id', sa.BigInteger(), nullable=False, comment='消息中心ID'),
    sa.Column('is_read', sa.Boolean(), nullable=True, comment='是否已读'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['messagecenter_id'], ['message_centers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_menu_button_permission',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=False),
    sa.Column('menu_button_id', sa.BigInteger(), nullable=True),
    sa.Column('data_range', sa.Integer(), nullable=True, comment='数据权限范围: 0-仅本人 1-本部门及以下 2-本部门 3-全部 4-自定'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['menu_button_id'], ['menu_buttons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_manage_dept',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('users_id', sa.BigInteger(), nullable=False),
    sa.Column('dept_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['depts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_post',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('users_id', sa.BigInteger(), nullable=False),
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_role',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('users_id', sa.BigInteger(), nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_menu_button_permission_dept',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('rolemenubuttonpermission_id', sa.BigInteger(), nullable=False),
    sa.Column('dept_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=True),
    sa.Column('updated_by', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['depts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rolemenubuttonpermission_id'], ['role_menu_button_permission.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('comments')
    op.drop_table('ai_models')
    op.add_column('posts', sa.Column('name', sa.String(length=64), nullable=False, comment='岗位名称'))
    op.add_column('posts', sa.Column('code', sa.String(length=32), nullable=False, comment='岗位编码'))
    op.add_column('posts', sa.Column('sort', sa.Integer(), nullable=True, comment='排序'))
    op.add_column('posts', sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'))
    op.add_column('posts', sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'))
    op.alter_column('posts', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Integer(),
               nullable=True,
               comment='状态: 0-离职 1-在职',
               existing_comment='状态: draft, published, archived')
    op.drop_constraint('posts_user_id_fkey', 'posts', type_='foreignkey')
    op.drop_column('posts', 'user_id')
    op.drop_column('posts', 'featured_image')
    op.drop_column('posts', 'title')
    op.drop_column('posts', 'content')
    op.drop_column('posts', 'excerpt')
    op.drop_column('posts', 'tags')
    op.drop_column('posts', 'comment_count')
    op.drop_column('posts', 'category')
    op.drop_column('posts', 'view_count')
    op.drop_column('posts', 'like_count')
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True, comment='最后登录时间'))
    op.add_column('users', sa.Column('is_staff', sa.Boolean(), nullable=False, comment='是否员工'))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'))
    op.add_column('users', sa.Column('date_joined', sa.DateTime(), nullable=False, comment='加入时间'))
    op.add_column('users', sa.Column('mobile', sa.String(length=255), nullable=True, comment='手机号'))
    op.add_column('users', sa.Column('name', sa.String(length=40), nullable=False, comment='姓名'))
    op.add_column('users', sa.Column('gender', sa.Integer(), nullable=True, comment='性别: 0-未知 1-男 2-女'))
    op.add_column('users', sa.Column('user_type', sa.Integer(), nullable=True, comment='用户类型: 0-后台用户 1-前台用户'))
    op.add_column('users', sa.Column('dept_id', sa.BigInteger(), nullable=True, comment='部门ID'))
    op.add_column('users', sa.Column('current_role_id', sa.BigInteger(), nullable=True, comment='当前角色ID'))
    op.add_column('users', sa.Column('login_error_count', sa.Integer(), nullable=True, comment='登录错误次数'))
    op.add_column('users', sa.Column('pwd_change_count', sa.Integer(), nullable=True, comment='密码修改次数'))
    op.add_column('users', sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID'))
    op.add_column('users', sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新者ID'))
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=128),
               comment='密码',
               existing_comment='加密后的密码',
               existing_nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment='是否超级用户',
               existing_comment='是否为超级用户',
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=150),
               comment='用户名',
               existing_comment='用户登录名，唯一',
               existing_nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=150),
               comment='名',
               existing_comment='用户名字',
               existing_nullable=False)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=150),
               comment='姓',
               existing_comment='用户姓氏',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=254),
               nullable=True,
               comment='邮箱',
               existing_comment='用户邮箱地址，唯一')
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(length=255),
               comment='头像',
               existing_comment='用户头像文件路径',
               existing_nullable=True)
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_status', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_foreign_key(None, 'users', 'depts', ['dept_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'users', 'roles', ['current_role_id'], ['id'], ondelete='SET NULL')
    op.drop_column('users', 'email_verified_at')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'password_reset_token')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'remember_token')
    op.drop_column('users', 'permissions')
    op.drop_column('users', 'profile_data')
    op.drop_column('users', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='用户状态：pending, active, inactive, suspended'))
    op.add_column('users', sa.Column('profile_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='用户档案信息，JSON格式'))
    op.add_column('users', sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='用户权限列表，JSON格式'))
    op.add_column('users', sa.Column('remember_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='记住我令牌'))
    op.add_column('users', sa.Column('last_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='最后登录时间'))
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True, comment='用户手机号码'))
    op.add_column('users', sa.Column('password_reset_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='密码重置令牌'))
    op.add_column('users', sa.Column('login_count', sa.INTEGER(), autoincrement=False, nullable=False, comment='用户登录次数'))
    op.add_column('users', sa.Column('email_verified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='邮箱验证时间'))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_status', 'users', ['status'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(length=255),
               comment='用户头像文件路径',
               existing_comment='头像',
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=254),
               type_=sa.VARCHAR(length=255),
               nullable=False,
               comment='用户邮箱地址，唯一',
               existing_comment='邮箱')
    op.alter_column('users', 'last_name',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=50),
               comment='用户姓氏',
               existing_comment='姓',
               existing_nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=50),
               comment='用户名字',
               existing_comment='名',
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=20),
               comment='用户登录名，唯一',
               existing_comment='用户名',
               existing_nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment='是否为超级用户',
               existing_comment='是否超级用户',
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=255),
               comment='加密后的密码',
               existing_comment='密码',
               existing_nullable=False)
    op.drop_column('users', 'updated_by')
    op.drop_column('users', 'created_by')
    op.drop_column('users', 'pwd_change_count')
    op.drop_column('users', 'login_error_count')
    op.drop_column('users', 'current_role_id')
    op.drop_column('users', 'dept_id')
    op.drop_column('users', 'user_type')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'name')
    op.drop_column('users', 'mobile')
    op.drop_column('users', 'date_joined')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'is_staff')
    op.drop_column('users', 'last_login')
    op.add_column('posts', sa.Column('like_count', sa.INTEGER(), autoincrement=False, nullable=True, comment='点赞数'))
    op.add_column('posts', sa.Column('view_count', sa.INTEGER(), autoincrement=False, nullable=True, comment='浏览量'))
    op.add_column('posts', sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='分类'))
    op.add_column('posts', sa.Column('comment_count', sa.INTEGER(), autoincrement=False, nullable=True, comment='评论数'))
    op.add_column('posts', sa.Column('tags', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='标签，逗号分隔'))
    op.add_column('posts', sa.Column('excerpt', sa.TEXT(), autoincrement=False, nullable=True, comment='文章摘要'))
    op.add_column('posts', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False, comment='文章内容'))
    op.add_column('posts', sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='文章标题'))
    op.add_column('posts', sa.Column('featured_image', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='特色图片'))
    op.add_column('posts', sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='用户ID'))
    op.create_foreign_key('posts_user_id_fkey', 'posts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('posts', 'status',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=20),
               nullable=False,
               comment='状态: draft, published, archived',
               existing_comment='状态: 0-离职 1-在职')
    op.drop_column('posts', 'updated_by')
    op.drop_column('posts', 'created_by')
    op.drop_column('posts', 'sort')
    op.drop_column('posts', 'code')
    op.drop_column('posts', 'name')
    op.create_table('ai_models',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='用户ID'),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='模型名称'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='模型描述'),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='模型类型'),
    sa.Column('framework', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='框架'),
    sa.Column('version', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='版本'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='状态: draft, training, trained, deployed, archived'),
    sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='模型文件路径'),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=True, comment='文件大小（字节）'),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='准确率'),
    sa.Column('precision', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='精确率'),
    sa.Column('recall', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='召回率'),
    sa.Column('f1_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='F1分数'),
    sa.Column('training_data_size', sa.INTEGER(), autoincrement=False, nullable=True, comment='训练数据大小'),
    sa.Column('training_time', sa.INTEGER(), autoincrement=False, nullable=True, comment='训练时间（秒）'),
    sa.Column('hyperparameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='超参数'),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='评估指标'),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='标签'),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否公开'),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='ai_models_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ai_models_pkey')
    )
    op.create_table('comments',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='用户ID'),
    sa.Column('post_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='文章ID'),
    sa.Column('parent_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='父评论ID'),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False, comment='评论内容'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='状态: pending, approved, rejected'),
    sa.Column('like_count', sa.INTEGER(), autoincrement=False, nullable=True, comment='点赞数'),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name='comments_parent_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='comments_post_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.drop_table('role_menu_button_permission_dept')
    op.drop_table('users_role')
    op.drop_table('users_post')
    op.drop_table('users_manage_dept')
    op.drop_table('role_menu_button_permission')
    op.drop_table('message_center_target_users')
    op.drop_table('field_permissions')
    op.drop_table('role_menu_permission')
    op.drop_table('message_center_target_roles')
    op.drop_table('message_center_target_depts')
    op.drop_table('menu_fields')
    op.drop_table('menu_buttons')
    op.drop_table('roles')
    op.drop_table('operation_logs')
    op.drop_table('message_centers')
    op.drop_table('menus')
    op.drop_table('login_logs')
    op.drop_table('file_lists')
    op.drop_table('download_centers')
    op.drop_table('dictionaries')
    op.drop_table('depts')
    op.drop_index('idx_config_key', table_name='configs')
    op.drop_table('configs')
    op.drop_index('idx_area_code', table_name='areas')
    op.drop_table('areas')
    op.drop_table('api_white_lists')
    # ### end Alembic commands ###
